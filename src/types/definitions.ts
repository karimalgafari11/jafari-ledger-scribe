// Add FiltersType export
export interface FiltersType {
  userId: string;
  startDate?: Date;
  endDate?: Date;
  action?: string;
  module?: string;
  status?: 'success' | 'failed' | 'warning' | 'info' | '';
  searchText?: string;
}

// Keep existing interfaces
export interface Currency {
  id: string;
  code: string;
  name: string;
  symbol: string;
  isDefault: boolean;
  isActive: boolean;
  exchangeRate: number;
  decimalPlaces: number;
  country?: string;
}

export interface ExchangeRate {
  id: string;
  sourceCurrencyId: string;
  targetCurrencyId: string;
  rate: number;
  date: string;
  isManual: boolean;
}

export interface Branch {
  id: string;
  code: string;
  name: string;
  address?: string;
  phone?: string;
  email?: string;
  manager?: string;
  isActive: boolean;
  isMain: boolean;
}

export interface VoucherType {
  id: string;
  code: string;
  name: string;
  description?: string;
  isAutoGenerated: boolean;
  isSystem: boolean;
}

export interface PaymentMethod {
  id: string;
  code: string;
  name: string;
  description?: string;
  isActive: boolean;
  requiresDetails: boolean;
}

export interface SalesRepresentative {
  id: string;
  code: string;
  name: string;
  phone: string;
  email: string;
  commissionRate: number;
  isActive: boolean;
  branchIds: string[];
}

// Additional interfaces needed by components
export interface Bank {
  id: string;
  name: string;
  code: string;
  branchName?: string;
  address?: string;
  swiftCode?: string;
  isActive: boolean;
}

export interface CashRegister {
  id: string;
  name: string;
  code: string;
  branchId: string;
  branchName?: string;
  isActive: boolean;
  balance: number;
  currency: string;
  allowNegative: boolean;
  notes?: string;
}

export interface Warehouse {
  id: string;
  code: string;
  name: string;
  branchId: string;
  address?: string;
  manager?: string;
  phone?: string;
  isActive: boolean;
}

export interface Discount {
  id: string;
  code: string;
  name: string;
  type: 'percentage' | 'fixed' | 'tiered';
  value: number;
  isActive: boolean;
  startDate?: Date;
  endDate?: Date;
  minAmount?: number;
  maxAmount?: number;
  limitPerCustomer?: number;
  customerGroups?: string[];
  productCategories?: string[];
  excludedProducts?: string[];
}

export interface AccountingPeriod {
  id: string;
  name: string;
  startDate: Date;
  endDate: Date;
  isClosed: boolean;
  closedBy?: string;
  closedAt?: Date;
}

export interface CommercialPaper {
  id: string;
  type: 'check' | 'bond' | 'bill';
  number: string;
  amount: number;
  currencyCode: string;
  issueDate: Date;
  dueDate: Date;
  status: 'draft' | 'active' | 'collected' | 'bounced' | 'void';
}

export interface DueNotification {
  id: string;
  paperId: string;
  paperNumber: string;
  dueDate: Date;
  amount: number;
  status: 'pending' | 'sent' | 'failed';
  sentAt?: Date;
}
